name: Release

# 当推送标签时触发发布流程
on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., v0.1.2)'
        required: true
        type: string

env:
  CARGO_TERM_COLOR: always

jobs:
  # 创建GitHub Release
  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      version: ${{ steps.get_version.outputs.version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Get version
        id: get_version
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            VERSION="${{ github.event.inputs.version }}"
          else
            VERSION=${GITHUB_REF#refs/tags/}
          fi
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          echo "Version: ${VERSION}"
      
      - name: Generate changelog
        id: changelog
        run: |
          # 提取当前版本的变更日志
          VERSION="${{ steps.get_version.outputs.version }}"
          VERSION_NUMBER=${VERSION#v}
          
          # 从CHANGELOG.md中提取当前版本的内容
          if [ -f CHANGELOG.md ]; then
            # 使用sed提取版本段落
            CHANGELOG_CONTENT=$(sed -n "/## \[${VERSION_NUMBER}\]/,/## \[/p" CHANGELOG.md | sed '$d' | tail -n +2)
            if [ -z "$CHANGELOG_CONTENT" ]; then
              CHANGELOG_CONTENT="Release ${VERSION}"
            fi
          else
            CHANGELOG_CONTENT="Release ${VERSION}"
          fi
          
          # 保存到文件，避免特殊字符问题
          echo "$CHANGELOG_CONTENT" > /tmp/changelog.txt
          echo "changelog_file=/tmp/changelog.txt" >> $GITHUB_OUTPUT
      
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_version.outputs.version }}
          release_name: Release ${{ steps.get_version.outputs.version }}
          body_path: ${{ steps.changelog.outputs.changelog_file }}
          draft: false
          prerelease: ${{ contains(steps.get_version.outputs.version, '-') }}

  # 发布到crates.io
  publish-crates:
    name: Publish to crates.io
    runs-on: ubuntu-latest
    needs: create-release
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
      
      - name: Login to crates.io
        run: cargo login ${{ secrets.CRATES_IO_TOKEN }}
      
      - name: Publish to crates.io
        run: cargo publish

  # 更新文档
  update-docs:
    name: Update Documentation
    runs-on: ubuntu-latest
    needs: publish-crates
    permissions:
      contents: write
      pages: write
      id-token: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
      
      - name: Build documentation
        run: cargo doc --no-deps --all-features
      
      - name: Deploy documentation
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./target/doc
          destination_dir: docs
          commit_message: "📚 Update docs for ${{ needs.create-release.outputs.version }}"

  # 发布后通知
  post-release:
    name: Post-release Summary
    runs-on: ubuntu-latest
    needs: [create-release, publish-crates, update-docs]
    if: always()
    steps:
      - name: Release Summary
        run: |
          echo "🎉 Release ${{ needs.create-release.outputs.version }} completed!"
          echo "📦 GitHub Release: ${{ needs.create-release.result }}"
          echo "🚀 Crates.io: ${{ needs.publish-crates.result }}"
          echo "📚 Docs: ${{ needs.update-docs.result }}"
          
          if [[ "${{ needs.publish-crates.result }}" == "success" ]]; then
            echo "✅ View on crates.io: https://crates.io/crates/supabase-jwt"
          fi